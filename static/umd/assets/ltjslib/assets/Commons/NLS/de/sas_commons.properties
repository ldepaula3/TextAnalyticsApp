#Toolkit: BMC_properties
#
# NOTE TO TRANSLATORS: THIS IS A FLEX PROPERTY FILE. YOU DON'T NEED TO ESCAPE QUOTE SYMBOLS IN YOUR TRANSLATIONS
# Tuple label
missingValue.txt=(fehlend)
subTotal.txt=Zwischensumme:
total.txt=Summe
suppressed.txt=(unterdrückt)

# VERBOSE expression descriptions
# template placeholders:
# {n} where n in [0 ... 9]: placeholder for the n-th function argument (zero-based)
# {,}: placeholder for the list separator
expression.description.error.unrecognized.txt = Unerkannter Ausdruck
expression.description.in.fmt.txt = {0} in {1}
expression.description.notIn.fmt.txt = {0} nicht in {1}
expression.description.equalTo.fmt.txt = {0} ist {1}
expression.description.notEqualTo.fmt.txt = {0} ist nicht {1}
expression.description.greaterThan.fmt.txt = {0} ist größer als {1}
expression.description.greaterThanEqualTo.fmt.txt = {0} ist größer oder gleich {1}
expression.description.lessThan.fmt.txt = {0} ist kleiner als {1}
expression.description.lessThanEqualTo.fmt.txt = {0} ist kleiner oder gleich {1}
expression.description.between.fmt.txt = {0} ist zwischen {1} und {2}
expression.description.contains.fmt.txt = {0} enthält {1}
expression.description.notContains.fmt.txt = {0} enthält nicht {1}
expression.description.beginsWith.fmt.txt = {0} beginnt mit {1}
expression.description.endsWith.fmt.txt = {0} endet auf {1}
expression.description.missing.fmt.txt = {0} ist fehlend
expression.description.notMissing.fmt.txt = {0} ist nicht fehlend

expression.description.after.fmt.txt = {0} startet nach dem {1}
expression.description.onOrAfter.fmt.txt = {0} startet am oder nach dem {1}
expression.description.before.fmt.txt = {0} endet vor dem {1}
expression.description.onOrBefore.fmt.txt = {0} endet am oder vor dem {1}

expression.description.compoundAnd.fmt.txt = {0} UND {1}
expression.description.compoundAnd.parenthetical.fmt.txt = ({0}) UND ({1})
expression.description.compoundOr.fmt.txt = {0} ODER {1}
expression.description.compoundOr.parenthetical.fmt.txt = ({0}) ODER ({1})

expression.description.betweenExcluding.fmt.txt = {0} zwischen {1} und {2} exklusive Grenzen
expression.description.outsideIncluding.fmt.txt = {0} außerhalb {1} und {2} inklusive Grenzen
expression.description.outsideExcluding.fmt.txt = {0} außerhalb {1} und {2} exklusive Grenzen

# Moved from iOS: InfoPanelAnyColumn, InfoPanelCurrentColumn
expression.description.anyValue.txt = Beliebiger Zellwert in Zeile
expression.description.currentValue.txt = Zellwert

expression.description.anyMeasureValue.txt = Beliebiger Maßwert

# INTERFACE expression descriptions
expression.description.interface.in.fmt.txt = {0} IN { {1} }
expression.description.interface.notIn.fmt.txt = {0} NOT IN { {1} }
expression.description.interface.missing.fmt.txt = {0} MISSING
expression.description.interface.notMissing.fmt.txt = {0} NOT MISSING
expression.description.interface.contains.fmt.txt = {1} IN {0}
expression.description.interface.notContains.fmt.txt = {1} NOT IN {0}
expression.description.interface.between.fmt.txt = {1} ≤ {0} ≤ {2}
expression.description.interface.betweenExcluding.fmt.txt = {1} < {0} < {2}
expression.description.interface.outsideIncluding.fmt.txt = NOT {1} ≤ {0} ≤ {2}
expression.description.interface.outsideExcluding.fmt.txt = NOT {1} < {0} < {2}
expression.description.interface.upper.fmt.txt = Upper( {0} )
expression.description.interface.lower.fmt.txt = Lower( {0} )
expression.description.interface.pow.fmt.txt = {0} ^ {1}
expression.description.interface.root.fmt.txt = Root[{1}]( {0} )
expression.description.interface.abs.fmt.txt = | {0} |
expression.description.interface.mod.fmt.txt = {0} % {1}
expression.description.interface.round.fmt.txt = Round[{1}]( {0} )
expression.description.interface.log.fmt.txt = Log[{1}]( {0} )
expression.description.interface.cond.fmt.txt = IF {0} THEN {1} ELSE {2}
expression.description.interface.concatenate.fmt.txt = Concat( {0}{,}{1} )
expression.description.interface.find.fmt.txt = Find( {0}{,}{1} )
expression.description.interface.findCharacter.fmt.txt = Find( {0}{,}{1} )
expression.description.interface.length.fmt.txt = Length( {0} )
expression.description.interface.pathBeginsWith.fmt.txt = {0} StartsWith {1}
expression.description.interface.pathEndsWith.fmt.txt = {0} EndsWith {1}
expression.description.interface.pathContains.fmt.txt = {1} IN {0}
expression.description.interface.pathContainsNode.fmt.txt = { {1}{,}{2} } IN {0}
expression.description.interface.cellIndex.fmt.txt = Cell[{0}+{1}]
expression.description.interface.aggregateCells.fmt.txt = {0}( {1} FOR {2}[{3}:{4}] )
expression.description.interface.rows.fmt.txt = Zeilen
expression.description.interface.columns.fmt.txt = Spalten
expression.description.interface.pathContainsSubPath.fmt.txt = ContainsSubPath( {0}{,}{1}{,}{2}{,}{3} )
expression.description.interface.anyMeasure.txt = Beliebiges Maß

# Copied from ConditionOperator.* in Flex MobileDesigner (VAD)
expression.operator.in.txt = In
expression.operator.notIn.txt = Nicht in
expression.operator.equals.txt = Gleich
expression.operator.notEquals.txt = Nicht gleich
expression.operator.greaterThan.txt = Größer als
expression.operator.greaterThanEqualTo.txt = Größer oder gleich
expression.operator.lessThan.txt = Kleiner als
expression.operator.lessThanEqualTo.txt = Kleiner oder gleich
expression.operator.betweenInclusive.txt = Zwischen (inklusive)
expression.operator.betweenExclusive.txt = Zwischen (exklusive)
expression.operator.outsideRangeInclusive.txt = Nicht zwischen (inklusive)
expression.operator.outsideRangeExclusive.txt = Nicht zwischen (exklusive)
expression.operator.contains.txt = Enthält
expression.operator.notContains.txt = Enthält nicht
expression.operator.beginsWith.txt = Beginnt mit
expression.operator.endsWith.txt = Endet mit
expression.operator.missing.txt = Fehlt
expression.operator.notMissing.txt = Fehlt nicht

expression.operator.after.txt = Startet nach dem
expression.operator.onOrAfter.txt = Startet am oder nach dem
expression.operator.before.txt = Endet vor dem
expression.operator.onOrBefore.txt = Endet am oder vor dem


ALL_OTHER.txt=Alle Sonstigen

#Aggregation labels
aggregation.minimum.txt = Minimum:
aggregation.maximum.txt = Maximum:
aggregation.total.txt = Gesamt:
aggregation.count.txt = Anzahl:
aggregation.sum.txt = Summe:
aggregation.average.txt = Durchschnitt:
aggregation.distinct.txt = Anzahl Einzelwerte:
aggregation.skew.txt = Schiefe:
aggregation.kurtosis.txt = Kurtosis:
aggregation.coefficientOfVariation.txt = Koeffizent der Variation:
aggregation.uncorrectedSumOfSquares.txt = Unkorrigierte Summe der Quadrate:
aggregation.correctedSumOfSquares.txt = Korrigierte Summe der Quadrate:
aggregation.tStatistic.txt = T-Statistik:
aggregation.pValue.txt = P-Wert:
aggregation.firstQuartile.txt = Erstes Quartil:
aggregation.median.txt = Median:
aggregation.thirdQuartile.txt = Drittes Quartil:
aggregation.standardDeviation.txt = Standardabweichung:
aggregation.standardError.txt = Standardfehler:
aggregation.variance.txt = Varianz:
aggregation.numberMissing.txt = Anzahl Fehlende:

#table grand total
table.grandTotal.txt = Gesamtsumme

#table sort
table.sort.sort.txt = Sortieren
table.sort.ascending.txt = Aufsteigend
table.sort.descending.txt = Absteigend
table.sort.none.txt = Ohne
table.sort.resetsort.txt = Sortierung zurücksetzen

#table sparkline
table.sparkline.to.txt = bis
table.sparkline.final.txt = Letzte

#crosstab actions
crosstab.expand.txt = Erweitern
crosstab.collapse.txt = Zuklappen
crosstab.drill.txt = Drillen
crosstab.pageDown.txt = Zu nächster Zeile springen
crosstab.pageDownEnd.txt = Zu letzter Zeile springen
crosstab.pageUp.txt = Zu vorheriger Zeile springen
crosstab.pageUpEnd.txt = Zu erster Zeile springen

#scroll tooltip
scroll.column.txt = Spalte {0} von {1}
scroll.row.txt = Zeile {0} von {1}

#default hierarchy labels
hierarchy.column.txt = Spaltenhierarchie
hierarchy.row.txt = Zeilenhierarchie
hierarchy.hierarchy.txt = Hierarchie

#accessibility
accessibility.dataElement.hint.txt = Doppelt tippen, um die Quickinfo zu öffnen und das Datenelement auszuwählen.
accessibility.objectType.crosstab.txt = Kreuztabelle
accessibility.objectType.dataGrid.txt = Datengitter

#accessibility used by KPIs
accessibility.kpi.header.txt = Group = {0}
accessibility.kpi.selection.txt = {0} von {1}


#indicates the row and column for a table cell for accessibility
accessibility.table.rowColumn.txt = Zeile {0}; Spalte {1}
accessibility.table.row.txt = Zeile {0}
accessibility.table.column.txt = Spalte {0}

#indicates the cell is a column header in the table for accessibility
accessibility.table.header.txt = Überschrift

#indicates the column for a table header or totals cell.
accessibility.table.column.txt = Spalte {0}

#indicates the sort, if applicable, in a column heading for accessibility
accessibility.table.sortPrimaryDescending.txt = Primäre Sortierung, absteigend
accessibility.table.sortSecondaryDescending.txt = Sekundäre Sortierung, absteigend
accessibility.table.sortDescending.txt = Sortieren, absteigend
accessibility.table.sortPrimaryAscending.txt = Primäre Sortierung, aufsteigend
accessibility.table.sortSecondaryAscending.txt = Sekundäre Sortierung, aufsteigend
accessibility.table.sortAscending.txt = Sortieren, aufsteigend
accessibility.table.sortEnabled.hint.txt = Doppelt tippen, um Quickinfo für Sortierung zu öffnen.

# indicates datagrid/crosstab selected state
accessibility.datagrid.rowSelected.txt = Ausgewählte Zeile
accessibility.crosstab.cellSelected.txt = Ausgewählt

# accessibility hints used with table cells, based on whether they have a tooltip
accessibility.table.selectRow.hint.txt = Doppelt tippen, um die Zeilenauswahl umzuschalten.
accessibility.table.openTooltip.hint.txt = Doppelt tippen, um Quickinfo zu öffnen und Zeilenauswahl umzuschalten.

# accessibility hints used with crosstab cells
accessibility.crosstab.selectCell.hint.txt = Doppelt tippen, um die Zellenauswahl umzuschalten.

# accesibility hints for crosstab total label on the header
accessibility.crosstab.rowTotal.txt = Zeilensumme
accessibility.crosstab.columnTotal.txt = Spaltensumme

# indicates crosstab row/column header
accessibility.crosstab.rowHeader.txt = Zeilenüberschrift
accessibility.crosstab.columnHeader.txt = Spaltenüberschrift

# indicates crosstab row/column category 
accessibility.crosstab.rowCategory.txt = Zeilenkategorie
accessibility.crosstab.columnCategory.txt = Spaltenkategorie

# indicates the level number for crosstab row/column header
accessibility.crosstab.level.txt = Ebene {0}

# indicates the collapsed/expanded state for crosstab row/column header
accessibility.crosstab.collapsed.txt = Zugeklappt
accessibility.crosstab.expanded.txt = Aufgeklappt
accessibility.crosstab.drillable.txt = Verknüpfung

# indicates the number row/column spans for crosstab row/column header
accessibility.crosstab.rowColumnSpans.txt = Umfasst {0} Spalten und {1} Zeilen
accessibility.crosstab.rowSpans.txt = Umfasst {0} Zeilen
accessibility.crosstab.columnSpans.txt = Umfasst {0} Spalten

# accessibility, indicates if the cell contains a visual
accessibility.table.containsKPI.txt = Enthält einen KPI
accessibility.table.containsSparkline.txt = Enthält eine Sparkline

# indicates that the cell is a column total cell for accessibility
accessibility.table.columnTotal.txt = Summe

# indicates an empty cell when a column has no total in the totals row for accessibility
accessibility.table.noTotal.txt = Keine Spaltensumme

# indicates a cell with a missing value in the data grid for
# accessibility
accessibility.table.missingValue.txt = Fehlend

# indicates the order preference for search results
# that might include address, city, and region
# ex.  address={0},city={1},region={2}
searchItem.AddressCityRegion.txt = {0}, {1}, {2}
searchItem.AddressCity.txt = {0}, {1}
searchItem.AddressRegion.txt = {0}, {1}
searchItem.CityRegion.txt = {0}, {1}

route.LessThanAMinute.txt = <1 Min
route.DistanceKilometers.fmt.txt = {0} Km
route.DistanceMiles.fmt.txt = {0} Meilen
route.DistanceMile.fmt.txt = {0} Meile
route.Minute.fmt.txt = {0} Min
route.HoursMinutes.fmt.txt = {0} Std. {1} Min.
route.Hours.fmt.txt = {0} Std.

# used by tooltips when not all of the data values can be displayed.
tooltip.numberDisplayed.txt = {0} von {1}
tooltip.colon.txt = {0}:

# Display List Separator, used to delimit lists of values in user facing text
displayListSeparator=;

promptbuttonbar.minlabel.txt=W...
