# Tuple label
missingValue.txt=(결측)
subTotal.txt=부분합:
total.txt=합계
suppressed.txt=(억제됨)

# VERBOSE expression descriptions
# template placeholders:
# {n} where n in [0 ... 9]: placeholder for the n-th function argument (zero-based)
# {,}: placeholder for the list separator
expression.description.error.unrecognized.txt = 인식할 수 없는 표현식
expression.description.in.fmt.txt = {0} in {1}
expression.description.notIn.fmt.txt = {0} not in {1}
expression.description.equalTo.fmt.txt = {0} is {1}
expression.description.notEqualTo.fmt.txt = {0} is not {1}
expression.description.greaterThan.fmt.txt = {0} greater than {1}
expression.description.greaterThanEqualTo.fmt.txt = {0} greater than or equal to {1}
expression.description.lessThan.fmt.txt = {0} less than {1}
expression.description.lessThanEqualTo.fmt.txt = {0} less than or equal to {1}
expression.description.between.fmt.txt = {0} between {1} and {2}
expression.description.contains.fmt.txt = {0} contains {1}
expression.description.notContains.fmt.txt = {0} does not contain {1}
expression.description.beginsWith.fmt.txt = {0} begins with {1}
expression.description.endsWith.fmt.txt = {0} ends with {1}
expression.description.missing.fmt.txt = {0} is missing
expression.description.notMissing.fmt.txt = {0} is not missing

expression.description.after.fmt.txt = {0} starts after {1}
expression.description.onOrAfter.fmt.txt = {0} starts on or after {1}
expression.description.before.fmt.txt = {0} ends before {1}
expression.description.onOrBefore.fmt.txt = {0} ends on or before {1}

expression.description.compoundAnd.fmt.txt = {0} AND {1}
expression.description.compoundAnd.parenthetical.fmt.txt = ({0}) AND ({1})
expression.description.compoundOr.fmt.txt = {0} OR {1}
expression.description.compoundOr.parenthetical.fmt.txt = ({0}) OR ({1})

expression.description.betweenExcluding.fmt.txt = {0} between {1} and {2} excluding bounds
expression.description.outsideIncluding.fmt.txt = {0} outside {1} and {2} including bounds
expression.description.outsideExcluding.fmt.txt = {0} outside {1} and {2} excluding bounds

# Moved from iOS: InfoPanelAnyColumn, InfoPanelCurrentColumn
expression.description.anyValue.txt = 행의 셀 값 중 하나
expression.description.currentValue.txt = 셀 값

expression.description.anyMeasureValue.txt = 측도 값 중 하나

# INTERFACE expression descriptions
expression.description.interface.in.fmt.txt = {0} IN { {1} }
expression.description.interface.notIn.fmt.txt = {0} NOT IN { {1} }
expression.description.interface.missing.fmt.txt = {0} MISSING
expression.description.interface.notMissing.fmt.txt = {0} NOT MISSING
expression.description.interface.contains.fmt.txt = {1} IN {0}
expression.description.interface.notContains.fmt.txt = {1} NOT IN {0}
expression.description.interface.between.fmt.txt = {1} ≤ {0} ≤ {2}
expression.description.interface.betweenExcluding.fmt.txt = {1} < {0} < {2}
expression.description.interface.outsideIncluding.fmt.txt = NOT {1} ≤ {0} ≤ {2}
expression.description.interface.outsideExcluding.fmt.txt = NOT {1} < {0} < {2}
expression.description.interface.upper.fmt.txt = Upper( {0} )
expression.description.interface.lower.fmt.txt = Lower( {0} )
expression.description.interface.pow.fmt.txt = {0} ^ {1}
expression.description.interface.root.fmt.txt = Root[{1}]( {0} )
expression.description.interface.abs.fmt.txt = | {0} |
expression.description.interface.mod.fmt.txt = {0} % {1}
expression.description.interface.round.fmt.txt = Round[{1}]( {0} )
expression.description.interface.log.fmt.txt = Log[{1}]( {0} )
expression.description.interface.cond.fmt.txt = IF {0} THEN {1} ELSE {2}
expression.description.interface.concatenate.fmt.txt = Concat( {0}{,}{1} )
expression.description.interface.find.fmt.txt = Find( {0}{,}{1} )
expression.description.interface.findCharacter.fmt.txt = Find( {0}{,}{1} )
expression.description.interface.length.fmt.txt = Length( {0} )
expression.description.interface.pathBeginsWith.fmt.txt = {0} StartsWith {1}
expression.description.interface.pathEndsWith.fmt.txt = {0} EndsWith {1}
expression.description.interface.pathContains.fmt.txt = {1} IN {0}
expression.description.interface.pathContainsNode.fmt.txt = { {1}{,}{2} } IN {0}
expression.description.interface.cellIndex.fmt.txt = Cell[{0}+{1}]
expression.description.interface.aggregateCells.fmt.txt = {0}( {1} FOR {2}[{3}:{4}] )
expression.description.interface.rows.fmt.txt = 행
expression.description.interface.columns.fmt.txt = 칼럼
expression.description.interface.pathContainsSubPath.fmt.txt = ContainsSubPath( {0}{,}{1}{,}{2}{,}{3} )
expression.description.interface.anyMeasure.txt = 임의 측도

# Copied from ConditionOperator.* in Flex MobileDesigner (VAD)
expression.operator.in.txt = In
expression.operator.notIn.txt = Not In
expression.operator.equals.txt = Equal
expression.operator.notEquals.txt = Not Equal
expression.operator.greaterThan.txt = Greater than
expression.operator.greaterThanEqualTo.txt = Greater Than or Equal
expression.operator.lessThan.txt = Less Than
expression.operator.lessThanEqualTo.txt = Less Than or Equal
expression.operator.betweenInclusive.txt = Between (Inclusive)
expression.operator.betweenExclusive.txt = Between (Exclusive)
expression.operator.outsideRangeInclusive.txt = Not Between (Inclusive)
expression.operator.outsideRangeExclusive.txt = Not Between (Exclusive)
expression.operator.contains.txt = Contains
expression.operator.notContains.txt = Does Not Contain
expression.operator.beginsWith.txt = Begins With
expression.operator.endsWith.txt = Ends With
expression.operator.missing.txt = Is Missing
expression.operator.notMissing.txt = Is Not Missing

expression.operator.after.txt = Starts after
expression.operator.onOrAfter.txt = Starts on or after
expression.operator.before.txt = Ends before
expression.operator.onOrBefore.txt = Ends on or before


ALL_OTHER.txt=기타 모두

#Aggregation labels
aggregation.minimum.txt = 최소:
aggregation.maximum.txt = 최대:
aggregation.total.txt = 합계:
aggregation.count.txt = 개수:
aggregation.sum.txt = 합계:
aggregation.average.txt = 평균:
aggregation.distinct.txt = 고유 개수:
aggregation.skew.txt = 왜도:
aggregation.kurtosis.txt = 첨도:
aggregation.coefficientOfVariation.txt = 변동 계수:
aggregation.uncorrectedSumOfSquares.txt = 비수정 제곱합:
aggregation.correctedSumOfSquares.txt = 수정 제곱합:
aggregation.tStatistic.txt = T-통계량:
aggregation.pValue.txt = P-값:
aggregation.firstQuartile.txt = 제1사분위수:
aggregation.median.txt = 중앙:
aggregation.thirdQuartile.txt = 제3사분위수:
aggregation.standardDeviation.txt = 표준편차:
aggregation.standardError.txt = 표준오차:
aggregation.variance.txt = 분산:
aggregation.numberMissing.txt = 결측 개수:

#table grand total
table.grandTotal.txt = 합계

#table sort
table.sort.sort.txt = 정렬
table.sort.ascending.txt = 오름차순
table.sort.descending.txt = 내림차순
table.sort.none.txt = 없음
table.sort.resetsort.txt = 정렬 재설정

#table sparkline
table.sparkline.to.txt = ~
table.sparkline.final.txt = 최종

#crosstab actions
crosstab.expand.txt = 펼치기
crosstab.collapse.txt = 접기
crosstab.drill.txt = 드릴
crosstab.pageDown.txt = 다음 행으로 건너뛰기
crosstab.pageDownEnd.txt = 맨 아래 행으로 건너뛰기
crosstab.pageUp.txt = 이전 행으로 건너뛰기
crosstab.pageUpEnd.txt = 맨 위 행으로 건너뛰기

#scroll tooltip
scroll.column.txt = {0}/{1} 칼럼
scroll.row.txt = {0}/{1} 행

#default hierarchy labels
hierarchy.column.txt = 칼럼 계층
hierarchy.row.txt = 행 계층
hierarchy.hierarchy.txt = 계층

#accessibility
accessibility.dataElement.hint.txt = 두 번 탭하여 툴팁을 열고 데이터 요소를 선택하십시오.
accessibility.objectType.crosstab.txt = 교차 테이블
accessibility.objectType.dataGrid.txt = 데이터 그리드

#accessibility used by KPIs
accessibility.kpi.header.txt = 그룹 = {0}
accessibility.kpi.selection.txt = {0} / {1}


#indicates the row and column for a table cell for accessibility
accessibility.table.rowColumn.txt = 행 {0}; 칼럼 {1}
accessibility.table.row.txt = 행 {0}
accessibility.table.column.txt = 칼럼 {0}

#indicates the cell is a column header in the table for accessibility
accessibility.table.header.txt = 머리글

#indicates the column for a table header or totals cell.
accessibility.table.column.txt = 칼럼 {0}

#indicates the sort, if applicable, in a column heading for accessibility
accessibility.table.sortPrimaryDescending.txt = 내림차순 1차 정렬
accessibility.table.sortSecondaryDescending.txt = 내림차순 2차 정렬
accessibility.table.sortDescending.txt = 내림차순 정렬
accessibility.table.sortPrimaryAscending.txt = 오름차순 1차 정렬
accessibility.table.sortSecondaryAscending.txt = 오름차순 2차 정렬
accessibility.table.sortAscending.txt = 오름차순 정렬
accessibility.table.sortEnabled.hint.txt = 정렬 툴팁을 열려면 두 번 탭하십시오.

# indicates datagrid/crosstab selected state
accessibility.datagrid.rowSelected.txt = 선택된 행
accessibility.crosstab.cellSelected.txt = 선택됨

# accessibility hints used with table cells, based on whether they have a tooltip
accessibility.table.selectRow.hint.txt = 행 선택을 전환하려면 두 번 탭하십시오.
accessibility.table.openTooltip.hint.txt = 두 번 탭하여 툴팁을 열고 행 선택을 전환하십시오.

# accessibility hints used with crosstab cells
accessibility.crosstab.selectCell.hint.txt = 셀 선택을 전환하려면 두 번 탭하십시오.

# accesibility hints for crosstab total label on the header
accessibility.crosstab.rowTotal.txt = 행 합계
accessibility.crosstab.columnTotal.txt = 칼럼 합계

# indicates crosstab row/column header
accessibility.crosstab.rowHeader.txt = 행 머리글
accessibility.crosstab.columnHeader.txt = 칼럼 머리글

# indicates crosstab row/column category 
accessibility.crosstab.rowCategory.txt = 행 범주
accessibility.crosstab.columnCategory.txt = 칼럼 범주

# indicates the level number for crosstab row/column header
accessibility.crosstab.level.txt = 레벨 {0}

# indicates the collapsed/expanded state for crosstab row/column header
accessibility.crosstab.collapsed.txt = 접기
accessibility.crosstab.expanded.txt = 펼치기
accessibility.crosstab.drillable.txt = 링크

# indicates the number row/column spans for crosstab row/column header
accessibility.crosstab.rowColumnSpans.txt = {0} 칼럼 및 {1} 행에 걸침
accessibility.crosstab.rowSpans.txt = {0} 행에 걸침
accessibility.crosstab.columnSpans.txt = {0} 칼럼에 걸침

# accessibility, indicates if the cell contains a visual
accessibility.table.containsKPI.txt = KPI 포함
accessibility.table.containsSparkline.txt = 스파크라인 포함

# indicates that the cell is a column total cell for accessibility
accessibility.table.columnTotal.txt = 합계

# indicates an empty cell when a column has no total in the totals row for accessibility
accessibility.table.noTotal.txt = 칼럼 합계 없음

# indicates a cell with a missing value in the data grid for
# accessibility
accessibility.table.missingValue.txt = 결측

# indicates the order preference for search results
# that might include address, city, and region
# ex.  address={0},city={1},region={2}
searchItem.AddressCityRegion.txt = {0}, {1}, {2}
searchItem.AddressCity.txt = {0}, {1}
searchItem.AddressRegion.txt = {0}, {1}
searchItem.CityRegion.txt = {0}, {1}

route.LessThanAMinute.txt = 1분 미만
route.DistanceKilometers.fmt.txt = {0}킬로미터
route.DistanceMiles.fmt.txt = {0}마일
route.DistanceMile.fmt.txt = {0}마일
route.Minute.fmt.txt = {0}분
route.HoursMinutes.fmt.txt = {0}시간 {1}분
route.Hours.fmt.txt = {0}시간

# used by tooltips when not all of the data values can be displayed.
tooltip.numberDisplayed.txt = {0} / {1}
tooltip.colon.txt = {0}:

# Display List Separator, used to delimit lists of values in user facing text
displayListSeparator=,

promptbuttonbar.minlabel.txt=값...
