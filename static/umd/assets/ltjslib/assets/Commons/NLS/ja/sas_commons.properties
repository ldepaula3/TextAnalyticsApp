# Tuple label
missingValue.txt=(欠損値)
subTotal.txt=小計:
total.txt=合計
suppressed.txt=(非表示)

# VERBOSE expression descriptions
# template placeholders:
# {n} where n in [0 ... 9]: placeholder for the n-th function argument (zero-based)
# {,}: placeholder for the list separator
expression.description.error.unrecognized.txt = 不明な式
expression.description.in.fmt.txt = {0} は {1} に含まれる
expression.description.notIn.fmt.txt = {0} は {1} に含まれない
expression.description.equalTo.fmt.txt = {0} は {1} である
expression.description.notEqualTo.fmt.txt = {0} は {1} でない
expression.description.greaterThan.fmt.txt = {0} は {1} より大きい
expression.description.greaterThanEqualTo.fmt.txt = {0} は {1} 以上である
expression.description.lessThan.fmt.txt = {0} は {1} 未満である
expression.description.lessThanEqualTo.fmt.txt = {0} は {1} 以下である
expression.description.between.fmt.txt = {0} は {1} から {2} の範囲に含まれる
expression.description.contains.fmt.txt = {0} は {1} を含む
expression.description.notContains.fmt.txt = {0} は {1} を含まない
expression.description.beginsWith.fmt.txt = {0}は {1} で始まる
expression.description.endsWith.fmt.txt = {0} は {1} で終わる
expression.description.missing.fmt.txt = {0} は欠損している
expression.description.notMissing.fmt.txt = {0} は欠損していない

expression.description.after.fmt.txt = {0} は {1} より後に始まる
expression.description.onOrAfter.fmt.txt = {0} は {1} かその後に始まる
expression.description.before.fmt.txt = {0} は {1} より前に終わる
expression.description.onOrBefore.fmt.txt = {0} は {1} かその前に終わる

expression.description.compoundAnd.fmt.txt = {0} AND {1}
expression.description.compoundAnd.parenthetical.fmt.txt = ({0}) AND ({1})
expression.description.compoundOr.fmt.txt = {0} OR {1}
expression.description.compoundOr.parenthetical.fmt.txt = ({0}) OR ({1})

expression.description.betweenExcluding.fmt.txt = {0} は {1} と {2} の範囲内 (端点は含まない)
expression.description.outsideIncluding.fmt.txt = {0} は {1} と {2} の範囲外 (端点は含む)
expression.description.outsideExcluding.fmt.txt = {0} は {1} と {2} の範囲外 (端点は含まない)

# Moved from iOS: InfoPanelAnyColumn, InfoPanelCurrentColumn
expression.description.anyValue.txt = 行のすべてのセル値
expression.description.currentValue.txt = セル値

expression.description.anyMeasureValue.txt = すべてのメジャー値

# INTERFACE expression descriptions
expression.description.interface.in.fmt.txt = {0} IN { {1} }
expression.description.interface.notIn.fmt.txt = {0} NOT IN { {1} }
expression.description.interface.missing.fmt.txt = {0} MISSING
expression.description.interface.notMissing.fmt.txt = {0} NOT MISSING
expression.description.interface.contains.fmt.txt = {1} IN {0}
expression.description.interface.notContains.fmt.txt = {1} NOT IN {0}
expression.description.interface.between.fmt.txt = {1} ≤ {0} ≤ {2}
expression.description.interface.betweenExcluding.fmt.txt = {1} < {0} < {2}
expression.description.interface.outsideIncluding.fmt.txt = NOT {1} ≤ {0} ≤ {2}
expression.description.interface.outsideExcluding.fmt.txt = NOT {1} < {0} < {2}
expression.description.interface.upper.fmt.txt = Upper( {0} )
expression.description.interface.lower.fmt.txt = Lower( {0} )
expression.description.interface.pow.fmt.txt = {0} ^ {1}
expression.description.interface.root.fmt.txt = Root[{1}]( {0} )
expression.description.interface.abs.fmt.txt = | {0} |
expression.description.interface.mod.fmt.txt = {0} % {1}
expression.description.interface.round.fmt.txt = Round[{1}]( {0} )
expression.description.interface.log.fmt.txt = Log[{1}]( {0} )
expression.description.interface.cond.fmt.txt = IF {0} THEN {1} ELSE {2}
expression.description.interface.concatenate.fmt.txt = Concat( {0}{,}{1} )
expression.description.interface.find.fmt.txt = Find( {0}{,}{1} )
expression.description.interface.findCharacter.fmt.txt = Find( {0}{,}{1} )
expression.description.interface.length.fmt.txt = Length( {0} )
expression.description.interface.pathBeginsWith.fmt.txt = {0} StartsWith {1}
expression.description.interface.pathEndsWith.fmt.txt = {0} EndsWith {1}
expression.description.interface.pathContains.fmt.txt = {1} IN {0}
expression.description.interface.pathContainsNode.fmt.txt = { {1}{,}{2} } IN {0}
expression.description.interface.cellIndex.fmt.txt = Cell[{0}+{1}]
expression.description.interface.aggregateCells.fmt.txt = {0}( {1} FOR {2}[{3}:{4}] )
expression.description.interface.rows.fmt.txt = 行
expression.description.interface.columns.fmt.txt = 列
expression.description.interface.pathContainsSubPath.fmt.txt = ContainsSubPath( {0}{,}{1}{,}{2}{,}{3} )
expression.description.interface.anyMeasure.txt = すべてのメジャー

# Copied from ConditionOperator.* in Flex MobileDesigner (VAD)
expression.operator.in.txt = 次の値の中にある
expression.operator.notIn.txt = 次の値の中にない
expression.operator.equals.txt = 次と等しい
expression.operator.notEquals.txt = 次の値に等しくない
expression.operator.greaterThan.txt = 次の値より大きい
expression.operator.greaterThanEqualTo.txt = 次の値以上
expression.operator.lessThan.txt = 次の値未満
expression.operator.lessThanEqualTo.txt = 次の値以下
expression.operator.betweenInclusive.txt = 次の値の間 (両端の値を含める)
expression.operator.betweenExclusive.txt = 次の値の間 (両端の値を含めない)
expression.operator.outsideRangeInclusive.txt = 次の値の間以外 (両端の値を含める)
expression.operator.outsideRangeExclusive.txt = 次の値の間以外 (両端の値を含めない)
expression.operator.contains.txt = 次を含む
expression.operator.notContains.txt = 次を含まない
expression.operator.beginsWith.txt = 次で始まる
expression.operator.endsWith.txt = 次で終わる
expression.operator.missing.txt = 欠損している
expression.operator.notMissing.txt = 欠損していない

expression.operator.after.txt = 次より後に開始
expression.operator.onOrAfter.txt = 次または次より後に開始
expression.operator.before.txt = 次より前に終了
expression.operator.onOrBefore.txt = 次または次より前に終了


ALL_OTHER.txt=その他すべて

#Aggregation labels
aggregation.minimum.txt = 最小:
aggregation.maximum.txt = 最大:
aggregation.total.txt = 合計:
aggregation.count.txt = カウント:
aggregation.sum.txt = 合計:
aggregation.average.txt = 平均:
aggregation.distinct.txt = 一意のカウント:
aggregation.skew.txt = 歪度:
aggregation.kurtosis.txt = 尖度:
aggregation.coefficientOfVariation.txt = 変動係数:
aggregation.uncorrectedSumOfSquares.txt = 無修正平方和:
aggregation.correctedSumOfSquares.txt = 修正平方和:
aggregation.tStatistic.txt = T 統計量:
aggregation.pValue.txt = P 値:
aggregation.firstQuartile.txt = 第 1 四分位数:
aggregation.median.txt = 中央値:
aggregation.thirdQuartile.txt = 第 3 四分位数:
aggregation.standardDeviation.txt = 標準偏差:
aggregation.standardError.txt = 標準誤差:
aggregation.variance.txt = 分散:
aggregation.numberMissing.txt = 欠損値の数:

#table grand total
table.grandTotal.txt = 総計

#table sort
table.sort.sort.txt = 並べ替え
table.sort.ascending.txt = 昇順
table.sort.descending.txt = 降順
table.sort.none.txt = なし
table.sort.resetsort.txt = 並べ替えのリセット

#table sparkline
table.sparkline.to.txt = -
table.sparkline.final.txt = 最終

#crosstab actions
crosstab.expand.txt = 展開
crosstab.collapse.txt = 折りたたむ
crosstab.drill.txt = ドリル
crosstab.pageDown.txt = 次の列にジャンプ
crosstab.pageDownEnd.txt = 最終列にジャンプ
crosstab.pageUp.txt = 前の列にジャンプ
crosstab.pageUpEnd.txt = 最初の列にジャンプ

#scroll tooltip
scroll.column.txt = 列 {0} / {1}
scroll.row.txt = 行 {0} / {1}

#default hierarchy labels
hierarchy.column.txt = 列階層
hierarchy.row.txt = 行階層
hierarchy.hierarchy.txt = 階層

#accessibility
accessibility.dataElement.hint.txt = ダブルタップすると、ツールチップを開き、データ要素を選択します。
accessibility.objectType.crosstab.txt = クロスタブ
accessibility.objectType.dataGrid.txt = データグリッド

#accessibility used by KPIs
accessibility.kpi.header.txt = グループ = {0}
accessibility.kpi.selection.txt = {1} の {0}


#indicates the row and column for a table cell for accessibility
accessibility.table.rowColumn.txt = 行 {0}; 列 {1}
accessibility.table.row.txt = 行 {0}
accessibility.table.column.txt = 列 {0}

#indicates the cell is a column header in the table for accessibility
accessibility.table.header.txt = ヘッダー

#indicates the column for a table header or totals cell.
accessibility.table.column.txt = 列 {0}

#indicates the sort, if applicable, in a column heading for accessibility
accessibility.table.sortPrimaryDescending.txt = プライマリの並べ替え降順
accessibility.table.sortSecondaryDescending.txt = セカンダリの並べ替え降順
accessibility.table.sortDescending.txt = 並べ替え降順
accessibility.table.sortPrimaryAscending.txt = プライマリの並べ替え昇順
accessibility.table.sortSecondaryAscending.txt = セカンダリの並べ替え昇順
accessibility.table.sortAscending.txt = 並べ替え昇順
accessibility.table.sortEnabled.hint.txt = ダブルタップすると、並べ替えツールチップを開きます。

# indicates datagrid/crosstab selected state
accessibility.datagrid.rowSelected.txt = 選択した行
accessibility.crosstab.cellSelected.txt = 選択済み

# accessibility hints used with table cells, based on whether they have a tooltip
accessibility.table.selectRow.hint.txt = ダブルタップすると、行の選択を切り替えます。
accessibility.table.openTooltip.hint.txt = ダブルタップすると、ツールチップを開き、行の選択を切り替えます。

# accessibility hints used with crosstab cells
accessibility.crosstab.selectCell.hint.txt = ダブルタップすると、セルの選択を切り替えます。

# accesibility hints for crosstab total label on the header
accessibility.crosstab.rowTotal.txt = 行の合計
accessibility.crosstab.columnTotal.txt = 列の合計

# indicates crosstab row/column header
accessibility.crosstab.rowHeader.txt = 行ヘッダー
accessibility.crosstab.columnHeader.txt = 列ヘッダー

# indicates crosstab row/column category 
accessibility.crosstab.rowCategory.txt = 行カテゴリ
accessibility.crosstab.columnCategory.txt = 列カテゴリ

# indicates the level number for crosstab row/column header
accessibility.crosstab.level.txt = レベル {0}

# indicates the collapsed/expanded state for crosstab row/column header
accessibility.crosstab.collapsed.txt = 折りたたみ
accessibility.crosstab.expanded.txt = 展開
accessibility.crosstab.drillable.txt = リンク

# indicates the number row/column spans for crosstab row/column header
accessibility.crosstab.rowColumnSpans.txt = {0} 列および {1} 行をスパン
accessibility.crosstab.rowSpans.txt = {0} 行をスパン
accessibility.crosstab.columnSpans.txt = {0} 列をスパン

# accessibility, indicates if the cell contains a visual
accessibility.table.containsKPI.txt = KPI を含みます
accessibility.table.containsSparkline.txt = スパークラインを含みます

# indicates that the cell is a column total cell for accessibility
accessibility.table.columnTotal.txt = 合計

# indicates an empty cell when a column has no total in the totals row for accessibility
accessibility.table.noTotal.txt = 列合計なし

# indicates a cell with a missing value in the data grid for
# accessibility
accessibility.table.missingValue.txt = 欠損

# indicates the order preference for search results
# that might include address, city, and region
# ex.  address={0},city={1},region={2}
searchItem.AddressCityRegion.txt = {0}, {1}, {2}
searchItem.AddressCity.txt = {0}, {1}
searchItem.AddressRegion.txt = {0}, {1}
searchItem.CityRegion.txt = {0}, {1}

route.LessThanAMinute.txt = <1 min
route.DistanceKilometers.fmt.txt = {0} km
route.DistanceMiles.fmt.txt = {0} mile
route.DistanceMile.fmt.txt = {0} mile
route.Minute.fmt.txt = {0} min
route.HoursMinutes.fmt.txt = {0} hr {1} min
route.Hours.fmt.txt = {0} hr

# used by tooltips when not all of the data values can be displayed.
tooltip.numberDisplayed.txt = {1} の {0}
tooltip.colon.txt = {0}:

# Display List Separator, used to delimit lists of values in user facing text
displayListSeparator=,

promptbuttonbar.minlabel.txt=日...
